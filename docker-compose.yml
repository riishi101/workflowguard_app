version: '3.8'

services:
  backend:
    container_name: workflowguard_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/workflowguard?schema=public
      - JWT_SECRET=${JWT_SECRET}
      - HUBSPOT_CLIENT_ID=${HUBSPOT_CLIENT_ID}
      - HUBSPOT_CLIENT_SECRET=${HUBSPOT_CLIENT_SECRET}
      - HUBSPOT_REDIRECT_URI=https://api.workflowguard.pro/api/auth/hubspot/callback
      - FRONTEND_URL=https://workflowguard.pro
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
    depends_on:
      - postgres
    networks:
      - workflowguard-network

  frontend:
    container_name: workflowguard_app
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - backend
    networks:
      - workflowguard-network

  nginx:
    container_name: workflowguard_nginx
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - workflowguard-network

  postgres:
    container_name: workflowguard_postgres
    image: postgres:15-alpine
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=workflowguard
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - workflowguard-network

networks:
  workflowguard-network:
    driver: bridge

volumes:
  postgres-data: