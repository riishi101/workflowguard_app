# Simplified Dockerfile for WorkflowGuard Frontend
# Based on memory analysis to avoid npm ci and permission issues

# Stage 1: Build stage
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies using npm install (more reliable than npm ci)
RUN npm install

# Copy source code
COPY . .

# Set environment variables for build - Using proper domain from memory analysis
ENV VITE_API_URL=https://api.workflowguard.pro
ENV VITE_APP_URL=https://www.workflowguard.pro
ENV NODE_ENV=production

# Build the application
RUN npm run build

# Stage 2: Production stage
FROM nginx:alpine AS production

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.production.conf /etc/nginx/nginx.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
