version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql://neondb_owner:npg_oPpKhNtTR20d@ep-dry-resonance-afgqyybz-pooler.c-2.us-west-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
      DIRECT_URL: "postgresql://neondb_owner:npg_oPpKhNtTR20d@ep-dry-resonance-afgqyybz.c-2.us-west-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
      PORT: 4000
      NODE_ENV: production
      HUBSPOT_APP_ID: "18270797"
      HUBSPOT_CLIENT_ID: "5e6a6429-8317-4e2a-a9b5-46e8669f72f6"
      HUBSPOT_CLIENT_SECRET: "07f931e2-bc75-4686-a9cf-c1d464c55019"
      HUBSPOT_REDIRECT_URI: "https://api.workflowguard.pro/api/auth/hubspot/callback"
      JWT_SECRET: "${JWT_SECRET}"
      SESSION_SECRET: "${SESSION_SECRET}"
      # Razorpay Configuration
      RAZORPAY_KEY_ID: "${RAZORPAY_KEY_ID}"
      RAZORPAY_KEY_SECRET: "${RAZORPAY_KEY_SECRET}"
      RAZORPAY_WEBHOOK_SECRET: "${RAZORPAY_WEBHOOK_SECRET}"
      # Razorpay Plan IDs
      RAZORPAY_PLAN_ID_STARTER_INR: "${RAZORPAY_PLAN_ID_STARTER_INR}"
      RAZORPAY_PLAN_ID_PROFESSIONAL_INR: "${RAZORPAY_PLAN_ID_PROFESSIONAL_INR}"
      RAZORPAY_PLAN_ID_ENTERPRISE_INR: "${RAZORPAY_PLAN_ID_ENTERPRISE_INR}"
      # Twilio WhatsApp Configuration
      TWILIO_ACCOUNT_SID: "${TWILIO_ACCOUNT_SID}"
      TWILIO_AUTH_TOKEN: "${TWILIO_AUTH_TOKEN}"
      # Logging
      LOG_LEVEL: "${LOG_LEVEL}"
    ports:
      - "127.0.0.1:4000:4000"  # Bind to localhost only (Nginx proxy)
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - workflowguard-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:3000:80"  # Bind to localhost only (Nginx proxy)
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - workflowguard-network

networks:
  workflowguard-network:
    driver: bridge

# Note: Removed local PostgreSQL as you're using Neon Database
