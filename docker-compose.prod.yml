services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: workflowguard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - workflowguard-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql://postgres:postgres123@db:5432/workflowguard"
      DIRECT_URL: "postgresql://postgres:postgres123@db:5432/workflowguard"
      PORT: 4000
      NODE_ENV: production
      HUBSPOT_APP_ID: "18270797"
      HUBSPOT_CLIENT_ID: "5e6a6429-8317-4e2a-a9b5-46e8669f72f6"
      HUBSPOT_CLIENT_SECRET: "07f931e2-bc75-4686-a9cf-c1d464c55019"
      HUBSPOT_REDIRECT_URI: "https://api.workflowguard.pro/api/auth/hubspot/callback"
      JWT_SECRET: "xrDmUc9gji+BcWHxH2gEPhjvNDDehJDs4Z04UI/bVn1fhjmKOgH9WoUUnrVEFYcaTlYmbUdhaoSysZWHiNy5Dw=="
      SESSION_SECRET: "your-super-secure-session-secret-here"
      # Razorpay Configuration
      RAZORPAY_KEY_ID: "rzp_live_R6PjXR1FYupO0Y"
      RAZORPAY_KEY_SECRET: "O5McpwbAgoiSNMJDQetruaTK"
      RAZORPAY_WEBHOOK_SECRET: "Liverpoolisthebest@1998"
      # Razorpay Plan IDs (INR) - Active
      RAZORPAY_PLAN_ID_STARTER_INR: "plan_R6RI02CsUCUlDz"
      RAZORPAY_PLAN_ID_PROFESSIONAL_INR: "plan_R6RKEg5mqJK6Ky"
      RAZORPAY_PLAN_ID_ENTERPRISE_INR: "plan_R6RKnjqXu0BZsH"
      # Multi-Currency Plan IDs - Active Razorpay Plans
      # USD Plans: $19, $49, $99 monthly
      RAZORPAY_PLAN_ID_STARTER_USD: "plan_RBDqWapKHZfPU7"
      RAZORPAY_PLAN_ID_PROFESSIONAL_USD: "plan_RBDrKWI81HS1FZ"
      RAZORPAY_PLAN_ID_ENTERPRISE_USD: "plan_RBDrX9dGapWrTe"
      # GBP Plans: £15, £39, £79 monthly
      RAZORPAY_PLAN_ID_STARTER_GBP: "plan_RBFxk81S3ySXxj"
      RAZORPAY_PLAN_ID_PROFESSIONAL_GBP: "plan_RBFy8LsuW36jIj"
      RAZORPAY_PLAN_ID_ENTERPRISE_GBP: "plan_RBFyJlB5jxwxB9"
      # EUR Plans: €17, €44, €89 monthly
      RAZORPAY_PLAN_ID_STARTER_EUR: "plan_RBFjbYhAtD3snL"
      RAZORPAY_PLAN_ID_PROFESSIONAL_EUR: "plan_RBFjqo5wE0d4jz"
      RAZORPAY_PLAN_ID_ENTERPRISE_EUR: "plan_RBFovOUIUXISBE"
      # CAD Plans: CA$27, CA$69, CA$139 monthly
      RAZORPAY_PLAN_ID_STARTER_CAD: "plan_RBFrtufmxmxwi8"
      RAZORPAY_PLAN_ID_PROFESSIONAL_CAD: "plan_RBFsD6U2rQb4B6"
      RAZORPAY_PLAN_ID_ENTERPRISE_CAD: "plan_RBFscXaosRIzEc"
      # Twilio WhatsApp Configuration
      TWILIO_ACCOUNT_SID: "ACbee0672c967962b2212e68bf188771d2"
      TWILIO_AUTH_TOKEN: "b80c34629dd5c41c26355dc6d60bca88"
      # Logging
      LOG_LEVEL: "info"
    ports:
      - "127.0.0.1:4000:4000"  # Bind to localhost only (Nginx proxy)
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const req = http.get('http://localhost:4000/', (res) => process.exit(0)); req.on('error', () => process.exit(1)); req.setTimeout(5000, () => { req.destroy(); process.exit(1); });"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - workflowguard-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:3000:80"  # Bind to localhost only (Nginx proxy)
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - workflowguard-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - workflowguard-network

  ssh-server:
    image: linuxserver/openssh-server:latest
    container_name: workflowguard-ssh
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - USER_NAME=workflowguard
      - USER_PASSWORD=workflowguard123
      - SUDO_ACCESS=true
    volumes:
      - ./nginx/sshd_config:/config/sshd/sshd_config
      - ssh_data:/config
    networks:
      - workflowguard-network
    cap_add:
      - NET_ADMIN

volumes:
  postgres_data:
  ssh_data:

networks:
  workflowguard-network:
    driver: bridge
